/**
 * This class is generated by jOOQ
 */
package com.iodesystems.iodecm.db.tables;


import com.iodesystems.iodecm.db.Keys;
import com.iodesystems.iodecm.db.Public;
import com.iodesystems.iodecm.db.tables.records.AclObjectIdentityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AclObjectIdentity extends TableImpl<AclObjectIdentityRecord> {

    private static final long serialVersionUID = -869997799;

    /**
     * The reference instance of <code>public.acl_object_identity</code>
     */
    public static final AclObjectIdentity ACL_OBJECT_IDENTITY = new AclObjectIdentity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AclObjectIdentityRecord> getRecordType() {
        return AclObjectIdentityRecord.class;
    }

    /**
     * The column <code>public.acl_object_identity.id</code>.
     */
    public final TableField<AclObjectIdentityRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('acl_object_identity_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.acl_object_identity.object_id_class</code>.
     */
    public final TableField<AclObjectIdentityRecord, Long> OBJECT_ID_CLASS = createField("object_id_class", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.acl_object_identity.object_id_identity</code>.
     */
    public final TableField<AclObjectIdentityRecord, Long> OBJECT_ID_IDENTITY = createField("object_id_identity", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.acl_object_identity.parent_object</code>.
     */
    public final TableField<AclObjectIdentityRecord, Long> PARENT_OBJECT = createField("parent_object", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.acl_object_identity.owner_sid</code>.
     */
    public final TableField<AclObjectIdentityRecord, Long> OWNER_SID = createField("owner_sid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.acl_object_identity.entries_inheriting</code>.
     */
    public final TableField<AclObjectIdentityRecord, Boolean> ENTRIES_INHERITING = createField("entries_inheriting", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.acl_object_identity</code> table reference
     */
    public AclObjectIdentity() {
        this("acl_object_identity", null);
    }

    /**
     * Create an aliased <code>public.acl_object_identity</code> table reference
     */
    public AclObjectIdentity(String alias) {
        this(alias, ACL_OBJECT_IDENTITY);
    }

    private AclObjectIdentity(String alias, Table<AclObjectIdentityRecord> aliased) {
        this(alias, aliased, null);
    }

    private AclObjectIdentity(String alias, Table<AclObjectIdentityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AclObjectIdentityRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACL_OBJECT_IDENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AclObjectIdentityRecord> getPrimaryKey() {
        return Keys.ACL_OBJECT_IDENTITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AclObjectIdentityRecord>> getKeys() {
        return Arrays.<UniqueKey<AclObjectIdentityRecord>>asList(Keys.ACL_OBJECT_IDENTITY_PKEY, Keys.UNIQUE_UK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AclObjectIdentityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AclObjectIdentityRecord, ?>>asList(Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_2, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_1, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentity as(String alias) {
        return new AclObjectIdentity(alias, this);
    }

    /**
     * Rename this table
     */
    public AclObjectIdentity rename(String name) {
        return new AclObjectIdentity(name, null);
    }
}
